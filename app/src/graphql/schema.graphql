# Autogenerated input type of AcceptOrder
input AcceptOrderInput {
  id: String!
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
}

# Autogenerated return type of AcceptOrder
type AcceptOrderPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  # Driver Accept order by ID.
  order: Order!
}

type Address {
  createdAt: ISO8601DateTime
  description: String!
  id: ID!
  latitude: String!
  longitude: String!
  name: String!
  updatedAt: ISO8601DateTime
  user: User
}

type AppSetting {
  build: String!
  createdAt: ISO8601DateTime
  id: ID!
  name: String!
  settingValue: String!
  updatedAt: ISO8601DateTime
  version: String!
}

type Branch {
  branchCode: String!
  createdAt: ISO8601DateTime
  deliveryAreas: [DeliveryArea!]!
  id: ID!
  latitude: Float!
  longitude: Float!
  name: String!
  updatedAt: ISO8601DateTime
  vendor: Vendor!
}

type Category {
  createdAt: ISO8601DateTime
  id: ID!
  isActive: Boolean!
  name: String!
  updatedAt: ISO8601DateTime
}

type ChatMessage {
  body: String!
  createdAt: ISO8601DateTime!
  delivered: Boolean!
  id: ID!
  orderId: Int!
  receiverId: Int!
  senderId: Int!
}

# Autogenerated input type of CheckInArea
input CheckInAreaInput {
  id: Int!
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
}

# Autogenerated return type of CheckInArea
type CheckInAreaPayload {
  checkInArea: Boolean!
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
}

# Autogenerated input type of ConvertUserToDriver
input ConvertUserToDriverInput {
  id: String!
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
}

# Autogenerated return type of ConvertUserToDriver
type ConvertUserToDriverPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  convertToDriver: String!
}

type Coordinates {
  latitude: Float!
  longitude: Float!
}

# A geo location.
input CoordinatesInput {
  latitude: Float!
  longitude: Float!
}

# Autogenerated input type of CreateAddress
input CreateAddressInput {
  name: String!
  description: String!
  latitude: String!
  longitude: String!
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
}

# Autogenerated return type of CreateAddress
type CreateAddressPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  createAddress: Address!
}

# Autogenerated input type of CreateAppSetting
input CreateAppSettingInput {
  name: String!
  settingValue: String!
  build: String!
  version: String!
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
}

# Autogenerated return type of CreateAppSetting
type CreateAppSettingPayload {
  appSetting: AppSetting!
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
}

# Autogenerated input type of CreateBasicOrder
input CreateBasicOrderInput {
  vendorName: String!
  description: String!
  origin: PickupCoordinatesInput!
  destination: PickupCoordinatesInput!
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
}

# Autogenerated return type of CreateBasicOrder
type CreateBasicOrderPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  order: Order!
}

# Autogenerated input type of CreateBranch
input CreateBranchInput {
  name: String!
  branchCode: String!
  latitude: Float!
  longitude: Float!
  vendorId: Int!
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
}

# Autogenerated return type of CreateBranch
type CreateBranchPayload {
  branch: Branch!
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
}

# Autogenerated input type of CreateCategory
input CreateCategoryInput {
  name: String!
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
}

# Autogenerated return type of CreateCategory
type CreateCategoryPayload {
  category: Category!
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
}

# Autogenerated input type of CreateDeliveryArea
input CreateDeliveryAreaInput {
  name: String!
  neighbours: [String!]
  isActive: Boolean!
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
}

# Autogenerated return type of CreateDeliveryArea
type CreateDeliveryAreaPayload {
  area: DeliveryArea
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
}

# Autogenerated input type of CreateGeopoint
input CreateGeopointInput {
  deliveryAreaId: Int!
  coordinates: [CoordinatesInput!]!
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
}

# Autogenerated return type of CreateGeopoint
type CreateGeopointPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  geopoint: [Geopoint!]
}

# Autogenerated input type of CreateNewMessage
input CreateNewMessageInput {
  orderId: Int!
  body: String!
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
}

# Autogenerated return type of CreateNewMessage
type CreateNewMessagePayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  createNewMessage: ChatMessage!
}

# Autogenerated input type of CreateOtp
input CreateOtpInput {
  mobile: String!
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
}

# Autogenerated return type of CreateOtp
type CreateOtpPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  createOtp: Otp!
}

# Autogenerated input type of CreateTransaction
input CreateTransactionInput {
  amount: String!
  walletId: String!
  note: String
  orderTrackId: String
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
}

# Autogenerated return type of CreateTransaction
type CreateTransactionPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  transaction: Transaction!
}

# Autogenerated input type of CreateUser
input CreateUserInput {
  name: String!
  email: String!
  mobile: String!
  password: String!
  deviceType: String!
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
}

# Autogenerated return type of CreateUser
type CreateUserPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  # Creates a new user, OTP required, Create OTP first.
  user: User
}

# Autogenerated input type of CreateVendor
input CreateVendorInput {
  name: String!
  description: String!
  logoImg: String!
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
}

# Autogenerated return type of CreateVendor
type CreateVendorPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  vendor: Vendor!
}

type Delete {
  code: Int!
  message: String!
}

# Autogenerated input type of DeleteAddress
input DeleteAddressInput {
  id: Int!
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
}

# Autogenerated return type of DeleteAddress
type DeleteAddressPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  response: Delete!
}

type DeliveryArea {
  createdAt: ISO8601DateTime
  id: ID!
  name: String!
  neighbours: [String!]
  points: [Geopoint!]!
  updatedAt: ISO8601DateTime
}

type Geopoint {
  createdAt: ISO8601DateTime
  deliveryArea: DeliveryArea!
  id: ID!
  latitude: Float!
  longitude: Float!
  updatedAt: ISO8601DateTime
}

# An ISO 8601-encoded datetime
scalar ISO8601DateTime

type Mutation {
  acceptOrder(input: AcceptOrderInput!): AcceptOrderPayload
  checkInArea(input: CheckInAreaInput!): CheckInAreaPayload
  convertUserToDriver(
    input: ConvertUserToDriverInput!
  ): ConvertUserToDriverPayload
  createAddress(input: CreateAddressInput!): CreateAddressPayload
  createAppSetting(input: CreateAppSettingInput!): CreateAppSettingPayload
  createBasicOrder(input: CreateBasicOrderInput!): CreateBasicOrderPayload
  createBranch(input: CreateBranchInput!): CreateBranchPayload
  createCategory(input: CreateCategoryInput!): CreateCategoryPayload
  createDeliveryArea(input: CreateDeliveryAreaInput!): CreateDeliveryAreaPayload
  createGeopoint(input: CreateGeopointInput!): CreateGeopointPayload
  createNewMessage(input: CreateNewMessageInput!): CreateNewMessagePayload
  createOtp(input: CreateOtpInput!): CreateOtpPayload
  createTransaction(input: CreateTransactionInput!): CreateTransactionPayload
  createUser(input: CreateUserInput!): CreateUserPayload
  createVendor(input: CreateVendorInput!): CreateVendorPayload
  deleteAddress(input: DeleteAddressInput!): DeleteAddressPayload
  signinUser(input: SigninUserInput!): SigninUserPayload
  # An example field added by the generator
  testField: String!
  updateBasicOrder(input: UpdateBasicOrderInput!): UpdateBasicOrderPayload
  updateDeviceId(input: UpdateDeviceIdInput!): UpdateDeviceIdPayload
  updateDriverStatus(input: UpdateDriverStatusInput!): UpdateDriverStatusPayload
  updateOrderStatus(input: UpdateOrderStatusInput!): UpdateOrderStatusPayload
  updateProfile(input: UpdateProfileInput!): UpdateProfilePayload
  verifyAddress(input: VerifyAddressInput!): VerifyAddressPayload
}

type Order {
  createdAt: ISO8601DateTime
  deliveryFee: String!
  description: String!
  destination: Coordinates!
  discount: Int
  driver: User
  grandTotal: String!
  id: ID!
  invoiceUrl: String
  isActive: Boolean
  isAssigned: Boolean!
  origin: Coordinates!
  status: String
  totalPrice: String!
  trackId: String
  updatedAt: ISO8601DateTime
  user: User
  vendorName: String
}

type Otp {
  id: ID!
  mobile: String!
  otp: String!
}

input PickupCoordinatesInput {
  latitude: String!
  longitude: String!
}

type Query {
  # Find All Addresses for logged-in user
  allAddresses: [Address!]!
  # Find All Categories
  allCategories: [Category!]!
  # Find All Delivery Areas
  allDeliveryAreas: [DeliveryArea!]!
  # Find All Geopoints
  allGeopoints: [Geopoint!]!
  # Find All Vendors
  allVendors: [Vendor!]!
  # Find All Branches For Delivery Area
  branchesByArea(deliveryAreaId: Int): [Branch!]!
  # Find Delivery Area ID by Latitude & Longitude
  deliveryArea(latitude: Float!, longitude: Float!): Int!
  # Find Delivery Area By ID Geopoints
  deliveryAreaGeopoints(id: Int!): [Geopoint!]!
  # Find all app settings
  fetchAppSettings: [AppSetting!]!
  # Find All Orders For Current User
  fetchOrders: [Order!]!
  # Find Current User Profile
  fetchProfile: User!
  # Find Current User Wallet
  fetchWallet: Wallet!
  # Find Order Chat Messages
  orderChat(orderId: Int!): [ChatMessage!]!
  # Find Order By ID
  orderDetails(id: String!): Order!
  # Find All Transactions
  transactions: [Transaction!]!
}

# Autogenerated input type of SigninUser
input SigninUserInput {
  mobile: String!
  password: String!
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
}

# Autogenerated return type of SigninUser
type SigninUserPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  token: String
  user: User
}

type Transaction {
  amount: String!
  createdAt: ISO8601DateTime
  id: ID!
  note: String
  orderTrackId: String
  updatedAt: ISO8601DateTime
}

# Autogenerated input type of UpdateBasicOrder
input UpdateBasicOrderInput {
  id: Int!
  totalPrice: String
  status: String!
  invoiceImageBase64: String!
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
}

# Autogenerated return type of UpdateBasicOrder
type UpdateBasicOrderPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  order: Order!
}

# Autogenerated input type of UpdateDeviceId
input UpdateDeviceIdInput {
  deviceId: String!
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
}

# Autogenerated return type of UpdateDeviceId
type UpdateDeviceIdPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  updateDeviceId: String!
}

# Autogenerated input type of UpdateDriverStatus
input UpdateDriverStatusInput {
  isOnline: Boolean!
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
}

# Autogenerated return type of UpdateDriverStatus
type UpdateDriverStatusPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  user: User!
}

# Autogenerated input type of UpdateOrderStatus
input UpdateOrderStatusInput {
  id: String!
  status: String!
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
}

# Autogenerated return type of UpdateOrderStatus
type UpdateOrderStatusPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  updateOrderStatus: Order!
}

# Autogenerated input type of UpdateProfile
input UpdateProfileInput {
  language: String
  name: String
  email: String
  deviceType: String
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
}

# Autogenerated return type of UpdateProfile
type UpdateProfilePayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  updateProfile: User!
}

type User {
  createdAt: ISO8601DateTime
  deviceId: String
  deviceType: String!
  email: String!
  id: ID!
  isBanned: Boolean!
  isOnline: Boolean!
  isVerified: Boolean!
  language: String!
  mobile: String!
  name: String!
  role: String!
  updatedAt: ISO8601DateTime
  wallet: Wallet!
}

type Vendor {
  branches: [Branch!]!
  createdAt: ISO8601DateTime
  description: String!
  id: ID!
  logoImg: String!
  name: String!
  updatedAt: ISO8601DateTime
}

# Autogenerated input type of VerifyAddress
input VerifyAddressInput {
  latitude: Float!
  longitude: Float!
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
}

# Autogenerated return type of VerifyAddress
type VerifyAddressPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  verifyAddress: Boolean!
}

type Wallet {
  balance: String!
  currency: String!
  id: ID!
  transactions: [Transaction!]
}

